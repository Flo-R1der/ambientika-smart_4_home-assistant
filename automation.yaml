automation:
  - id: automation.ambientika_authenticate
    alias: Ambientika Authenticate
    description: ""
    mode: single
    trigger:
      - platform: homeassistant
        event: start
      - platform: numeric_state
        entity_id:
          - sensor.ambientika_token_remaining_days
        below: 5
    condition: []
    action:
      - service: rest_command.ambientika_authenticate
        metadata: {}
        data:
          username: !secret ambientika_username
          password: !secret ambientika_password
        response_variable: response
      - service: input_text.set_value
        metadata: {}
        data:
          value: "{{ response.content.jwtToken }}"
        target:
          entity_id: input_text.ambientika_access_token
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.ambientika_token_remaining_days

  - id: automation.ambientika_1_change_mode
    alias: Ambientika 1 Change-Mode
    description: ""
    mode: single
    trigger:
      - platform: state
        entity_id:
          - input_select.ambientika_1_mode
          - input_number.ambientika_1_fanspeed
          - input_number.ambientika_1_humiditylevel
          - input_number.ambientika_1_lightlevel
        id: change_mode
      - platform: state
        entity_id:
          - sensor.ambientika_1_operating_mode
          - sensor.ambientika_1_fan_speed
          - sensor.ambientika_1_humidity_level
          - sensor.ambientika_1_lightlevel
        id: mode_changed
    condition:
      - condition: template
        value_template: >-
          {{ now() > as_datetime(this.attributes.last_triggered, today_at("00:00")) + timedelta(seconds=2) }}
    action:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - change_mode
            sequence:
              - service: rest_command.ambientika_change_mode
                data:
                  serial: !secret serial_device-1
                  mode: '"{{ states("input_select.ambientika_1_mode") }}"'
                  fan: "{{ states('input_number.ambientika_1_fanSpeed')|int - 1 }}"
                  humidity: "{{ states('input_number.ambientika_1_humidityLevel')|int - 1 }}"
                  light: "{{ states('input_number.ambientika_1_lightLevel')|int + 1 }}"
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 3
                  milliseconds: 0
              - service: homeassistant.update_entity
                data: {}
                target:
                  entity_id: sensor.ambientika_1_operating_mode
          - conditions:
              - condition: trigger
                id:
                  - mode_changed
              - condition: template
                value_template:
                  "{{ states('sensor.ambientika_1_operating_mode') not in ['unavailable', 'unknown'] and
                  states('sensor.ambientika_1_fan_speed') not in ['unavailable', 'unknown'] and
                  states('sensor.ambientika_1_humidity_level') not in ['unavailable', 'unknown'] and
                  states('sensor.ambientika_1_light_sensor') not in ['unavailable', 'unknown'] }}"
            sequence:
              - action: input_select.select_option
                target:
                  entity_id: input_select.ambientika_1_mode
                data:
                  option: "{{ states('sensor.ambientika_1_operating_mode') }}"
              - variables:
                  fanspeed:
                    "{% if states('sensor.ambientika_1_fan_speed') == 'Low' %} 1
                    {% elif states('sensor.ambientika_1_fan_speed') == 'Medium' %} 2
                    {% elif states('sensor.ambientika_1_fan_speed') == 'High' %} 3
                    {% else %} {{ states('input_number.ambientika_1_fanspeed') }}
                    {% endif %}"
                  humiditylevel:
                    "{% if states('sensor.ambientika_1_humidity_level') == 'Dry' %} 1
                    {% elif states('sensor.ambientika_1_humidity_level') == 'Normal' %} 2
                    {% elif states('sensor.ambientika_1_humidity_level') == 'Moist' %} 3
                    {% else %} {{ states('input_number.ambientika_1_humiditylevel') }}
                    {% endif %}"
                  lightsensorlevel:
                    "{% if states('sensor.ambientika_1_lightlevel') == 'NotAvailable' %} -1
                    {% elif states('sensor.ambientika_1_lightlevel') == 'Off' %} 0
                    {% elif states('sensor.ambientika_1_lightlevel') == 'Low' %} 1
                    {% elif states('sensor.ambientika_1_lightlevel') == 'Medium' %} 2
                    {% else %} {{ states('input_number.ambientika_1_lightlevel') }}
                    {% endif %}"
              - action: input_number.set_value
                target:
                  entity_id: input_number.ambientika_1_fanspeed
                data:
                  value: "{{ fanspeed|float }}"
              - action: input_number.set_value
                target:
                  entity_id: input_number.ambientika_1_humiditylevel
                data:
                  value: "{{ humiditylevel|float }}"
              - action: input_number.set_value
                target:
                  entity_id: input_number.ambientika_1_lightlevel
                data:
                  value: "{{ lightsensorlevel|float }}"

  - id: automation.ambientika_1_filter_notification
    alias: Ambientika 1 Filter Notification
    description: ""
    mode: single
    trigger:
      - platform: state
        entity_id:
          - sensor.ambientika_1_filter_status
        to: Bad
        id: bad_filter
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: RESET_FILTER_1
        id: reset_filter
    condition: []
    action:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - bad_filter
            sequence:
              - variables:
                  area: "{{ area_name(trigger.entity_id) }}"
                  short_name: >-
                    Ambientika {{ state_attr(trigger.entity_id,
                    'friendly_name').split(' ')[1] }}
                  message: >-
                    The filter of your <b>{{short_name}}</b> is in bad condition.
                    <b>Please clean</b> it and reset the working hours.
              - action: notify.notify
                data:
                  title: Ambiantika Filter
                  message: "{{ message}}"
                  data:
                    tag: "{{ trigger.entity_id }}"
                    visibility: public
                    sticky: "true"
                    notification_icon: mdi:air-filter
                    actions:
                      - action: RESET_FILTER_1
                        title: Reset Filter
          - conditions:
              - condition: trigger
                id:
                  - reset_filter
            sequence:
              - variables:
                  device_serial: "{{ state_attr(trigger.event.data.tag, 'device_serial') }}"
              - action: rest_command.ambientika_reset_filter
                metadata: {}
                data:
                  rest_url: >-
                    {{ 'https://app.ambientika.eu:4521/device/reset-filter' ~
                    '?deviceSerialNumber=' ~ device_serial }}
                response_variable: result
              - if:
                  - condition: template
                    value_template: "{{ result.status == 200 }}"
                then:
                  - action: notify.notify
                    metadata: {}
                    data:
                      message: clear_notification
                      data:
                        tag: "{{ trigger.event.data.tag }}"
                else:
                  - action: notify.notify
                    metadata: {}
                    data:
                      title: ⚠️ Ambientika Filter-Reset failed
                      message: >-
                        Automatic filter reset failed. Please use the official app
                        to reset the filter status.
